//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.1
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Effekseer.swig {

public class EffekseerManagerCore : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal EffekseerManagerCore(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(EffekseerManagerCore obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~EffekseerManagerCore() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          EffekseerCorePINVOKE.delete_EffekseerManagerCore(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public EffekseerManagerCore() : this(EffekseerCorePINVOKE.new_EffekseerManagerCore(), true) {
  }

  public bool Initialize(int spriteMaxCount) {
    bool ret = EffekseerCorePINVOKE.EffekseerManagerCore_Initialize(swigCPtr, spriteMaxCount);
    return ret;
  }

  public void Update(float deltaFrames) {
    EffekseerCorePINVOKE.EffekseerManagerCore_Update(swigCPtr, deltaFrames);
  }

  public int Play(EffekseerEffectCore effect) {
    int ret = EffekseerCorePINVOKE.EffekseerManagerCore_Play(swigCPtr, EffekseerEffectCore.getCPtr(effect));
    return ret;
  }

  public void SetEffectPosition(int handle, float x, float y, float z) {
    EffekseerCorePINVOKE.EffekseerManagerCore_SetEffectPosition(swigCPtr, handle, x, y, z);
  }

  public void DrawBack() {
    EffekseerCorePINVOKE.EffekseerManagerCore_DrawBack(swigCPtr);
  }

  public void DrawFront() {
    EffekseerCorePINVOKE.EffekseerManagerCore_DrawFront(swigCPtr);
  }

  public void SetViewProjectionMatrixWithSimpleWindow(int windowWidth, int windowHeight) {
    EffekseerCorePINVOKE.EffekseerManagerCore_SetViewProjectionMatrixWithSimpleWindow(swigCPtr, windowWidth, windowHeight);
  }

}

}
